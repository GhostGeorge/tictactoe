<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Queue - Tic Tac Toe</title>
</head>
<body>
  <h1>Matchmaking Queue</h1>
  <p>Your player ID: <%= playerId %></p>
  <p>Status: <span id="status">Connecting...</span></p>

  <script src="/socket.io/socket.io.js"></script>

  <script id="server-data" type="application/json">
    <%- JSON.stringify({ playerId, guest }) %>
  </script>

  <script>
    // Parse server data safely from the script tag
    const serverData = JSON.parse(document.getElementById('server-data').textContent);
    const playerId = serverData.playerId;
    const isGuest = serverData.guest;

    const socket = io();

    const statusEl = document.getElementById('status');

    socket.on('connect', () => {
      statusEl.textContent = 'Connected to server, joining queue...';

      socket.emit('joinQueue', { playerId, isGuest });
    });

    socket.on('queueUpdate', ({ position }) => {
      statusEl.textContent = `Waiting in queue... position: ${position}`;
    });

    socket.on('queueError', ({ message }) => {
      statusEl.textContent = `Queue error: ${message}`;
    });

    socket.on('matchFound', ({ gameId, symbol, playerId: gamePlayerId }) => {
      statusEl.textContent = `Match found! Redirecting to game...`;
      console.log('Match found! GameId:', gameId, 'Symbol:', symbol, 'Game PlayerId:', gamePlayerId);

      // Redirect to game page with the actual player ID as a query parameter
      window.location.href = `/game/${gameId}?playerId=${encodeURIComponent(gamePlayerId || playerId)}`;
    });

    socket.on('disconnect', () => {
      statusEl.textContent = 'Disconnected from server.';
    });
  </script>
</body>
</html>